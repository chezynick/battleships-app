[{"/Users/nickchesterton/battleships-app/src/App.js":"1","/Users/nickchesterton/battleships-app/src/components/Ship.js":"2","/Users/nickchesterton/battleships-app/src/components/GameBoard.js":"3","/Users/nickchesterton/battleships-app/src/components/BoardCreate.js":"4","/Users/nickchesterton/battleships-app/src/components/Header.js":"5","/Users/nickchesterton/battleships-app/src/components/GameUpdate.js":"6","/Users/nickchesterton/battleships-app/src/components/BoatUpdate.js":"7","/Users/nickchesterton/battleships-app/src/components/BoatHolder.js":"8","/Users/nickchesterton/battleships-app/src/reportWebVitals.js":"9"},{"size":3564,"mtime":1606488845074,"results":"10","hashOfConfig":"11"},{"size":214,"mtime":1606413027459,"results":"12","hashOfConfig":"11"},{"size":1896,"mtime":1606488923055,"results":"13","hashOfConfig":"11"},{"size":214,"mtime":1606217630827,"results":"14","hashOfConfig":"11"},{"size":125,"mtime":1606219932377,"results":"15","hashOfConfig":"11"},{"size":753,"mtime":1606413569846,"results":"16","hashOfConfig":"11"},{"size":1157,"mtime":1606412912839,"results":"17","hashOfConfig":"11"},{"size":750,"mtime":1606316286198,"results":"18","hashOfConfig":"11"},{"size":362,"mtime":1606129868487,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"9bah3k",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/nickchesterton/battleships-app/src/App.js",["42"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n//import components\nimport { Ship } from './components/Ship';\nimport GameBoard from './components/GameBoard';\n\nimport { BoardCreate } from './components/BoardCreate';\nimport Header from './components/Header';\nimport GameUpdate from './components/GameUpdate';\nimport BoatUpdate from './components/BoatUpdate';\n\nfunction App() {\n\t//state values for players and board control\n\tconst [board, setBoard] = useState(BoardCreate);\n\tconst [board2, setBoard2] = useState(BoardCreate);\n\tconst [display, setDisplay] = useState(true);\n\tconst [playerTurn, setPlayerTurn] = useState(false);\n\tconst [VrsComputer, setVrsComputer] = useState(false);\n\tconst [computerTurn, setComputerTurn] = useState(false);\n\t//set boats for player 1 and add to array\n\tconst ship1 = new Ship(3, 4, false, 1);\n\tconst ship2 = new Ship(3, 45, true, 2);\n\tconst ship3 = new Ship(5, 84, false, 3);\n\tconst ship4 = new Ship(4, 24, true, 4);\n\tconst Player1 = [ship1, ship2, ship3, ship4];\n\t//set boats for player 2 and add to array\n\tconst ship5 = new Ship(3, 23, false, 5);\n\tconst ship6 = new Ship(3, 76, true, 6);\n\tconst ship7 = new Ship(5, 55, false, 7);\n\tconst ship8 = new Ship(4, 11, true, 8);\n\tconst Player2 = [ship5, ship6, ship7, ship8];\n\t//place ship function\n\tconst shipPlacer = () => {\n\t\tsetDisplay(false);\n\t\tPlayer1.forEach((a) => {\n\t\t\tif (a.direction === true) {\n\t\t\t\tfor (let i = a.position; i < a.position + a.boat.length * 10; i += 10) {\n\t\t\t\t\tboard[i].containsShip = a.name;\n\t\t\t\t\tconsole.log(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = a.position; i < a.position + a.boat.length; i++) {\n\t\t\t\t\tboard[i].containsShip = a.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetBoard([...board]);\n\t\t});\n\t\tPlayer2.forEach((b) => {\n\t\t\tif (b.direction === true) {\n\t\t\t\tfor (let i = b.position; i < b.position + b.boat.length * 10; i += 10) {\n\t\t\t\t\tboard2[i].containsShip = b.name;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = b.position; i < b.position + b.boat.length; i++) {\n\t\t\t\t\tboard2[i].containsShip = b.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetBoard2([...board2]);\n\t\t});\n\t};\n\n\t//hit and miss updater\n\tconst updateBoard = (result, set) => {\n\t\tset(result);\n\t};\n\t//click handler for computer controlled oponent\n\tconst computerHandler = () => {\n\t\tsetVrsComputer(true);\n\t\tsetComputerTurn(true);\n\t\tshipPlacer();\n\t};\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tsetPlayerTurn(!playerTurn);\n\t\t\tsetComputerTurn(true);\n\t\t}, 1500);\n\t}, [board2, board]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<div className=\"boats1\">\n\t\t\t\t<BoatUpdate board={board2} player={Player2} playerTurn={playerTurn} />\n\n\t\t\t\t<div className=\"boardContainer\">\n\t\t\t\t\t{playerTurn ? (\n\t\t\t\t\t\t<GameBoard\n\t\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\t\tplayer=\"Player 2\"\n\t\t\t\t\t\t\tupdateBoard={updateBoard}\n\t\t\t\t\t\t\tsetBoard={setBoard}\n\t\t\t\t\t\t\tVrsComputer={VrsComputer}\n\t\t\t\t\t\t\tcomputerTurn={computerTurn}\n\t\t\t\t\t\t\tsetComputerTurn={setComputerTurn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<GameBoard\n\t\t\t\t\t\t\tboard={board2}\n\t\t\t\t\t\t\tplayer=\"Player 1\"\n\t\t\t\t\t\t\tupdateBoard={updateBoard}\n\t\t\t\t\t\t\tsetBoard={setBoard2}\n\t\t\t\t\t\t\tVrsComputer={VrsComputer}\n\t\t\t\t\t\t\tcomputerTurn={computerTurn}\n\t\t\t\t\t\t\tsetComputerTurn={setComputerTurn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<BoatUpdate board={board} player={Player1} playerTurn={playerTurn} />\n\t\t\t</div>\n\t\t\t<GameUpdate board={board} board2={board2} Player1={Player1} Player2={Player2} />\n\t\t\t{display ? (\n\t\t\t\t<div className=\"buttonHolder\">\n\t\t\t\t\t<button onClick={computerHandler}>'BATTLE THE COMPUTER?'</button>\n\t\t\t\t\t<button onClick={shipPlacer}>'DESTROY A HUMAN!!'</button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n",["43","44"],"/Users/nickchesterton/battleships-app/src/components/Ship.js",[],"/Users/nickchesterton/battleships-app/src/components/GameBoard.js",["45","46"],"import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faFireAlt, faWater } from '@fortawesome/free-solid-svg-icons';\nconst GameBoard = ({ board, updateBoard, player, setBoard, VrsComputer, setComputerTurn, computerTurn }) => {\n\tconst clickHandler = (square) => {\n\t\tboard.forEach((a) => {\n\t\t\tsetComputerTurn(false);\n\t\t\tif (a.key === square) {\n\t\t\t\tif (a.containsShip) {\n\t\t\t\t\ta.hit = true;\n\t\t\t\t} else {\n\t\t\t\t\ta.missed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tupdateBoard([...board], setBoard);\n\t};\n\n\tuseEffect(() => {\n\t\tif (computerTurn === true && VrsComputer === true && player === 'Player 2') {\n\t\t\tgetRandomInt(0, 100);\n\t\t}\n\t}, [{ board }]);\n\n\tfunction getRandomInt(min, max) {\n\t\tmin = Math.ceil(min);\n\t\tmax = Math.floor(max);\n\t\tconst guess = Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n\n\t\tif (board[guess].hit === true || board[guess].missed === true) {\n\t\t\tgetRandomInt(0, 100);\n\t\t} else {\n\t\t\tclickHandler(guess);\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className={player === 'Player 1' ? 'player' : 'player2'}>{player}'s Turn</div>\n\t\t\t<div className=\"board\">\n\t\t\t\t{board.map((element) => {\n\t\t\t\t\tif (element.missed === true) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (element.hit === true) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFireAlt} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon onClick={() => clickHandler(element.key)} icon={faWater} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default GameBoard;\n","/Users/nickchesterton/battleships-app/src/components/BoardCreate.js",[],"/Users/nickchesterton/battleships-app/src/components/Header.js",[],"/Users/nickchesterton/battleships-app/src/components/GameUpdate.js",[],"/Users/nickchesterton/battleships-app/src/components/BoatUpdate.js",[],"/Users/nickchesterton/battleships-app/src/components/BoatHolder.js",[],"/Users/nickchesterton/battleships-app/src/reportWebVitals.js",[],["47","48"],{"ruleId":"49","severity":1,"message":"50","line":79,"column":5,"nodeType":"51","endLine":79,"endColumn":20,"suggestions":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":23,"column":5,"nodeType":"51","endLine":23,"endColumn":16,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":23,"column":6,"nodeType":"60","endLine":23,"endColumn":15},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","replacedBy":"62"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playerTurn'. Either include it or remove the dependency array. You can also do a functional update 'setPlayerTurn(p => ...)' if you only need 'playerTurn' in the 'setPlayerTurn' call.","ArrayExpression",["63"],"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"React Hook useEffect has missing dependencies: 'VrsComputer', 'computerTurn', 'getRandomInt', and 'player'. Either include them or remove the dependency array.",["66"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ObjectExpression",["64"],["65"],{"desc":"67","fix":"68"},"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [board2, board, playerTurn]",{"range":"71","text":"72"},"Update the dependencies array to be: [VrsComputer, computerTurn, getRandomInt, player]",{"range":"73","text":"74"},[2398,2413],"[board2, board, playerTurn]",[685,696],"[VrsComputer, computerTurn, getRandomInt, player]"]