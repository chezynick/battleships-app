{"version":3,"sources":["components/Ship.js","components/GameBoard.js","components/BoardCreate.js","components/Header.js","components/GameUpdate.js","components/BoatHolder.js","components/BoatUpdate.js","App.js","reportWebVitals.js","index.js"],"names":["Ship","length","position","direction","name","this","boat","i","push","GameBoard","board","updateBoard","player","setBoard","VrsComputer","setComputerTurn","computerTurn","clickHandler","square","forEach","a","key","containsShip","hit","missed","getRandomInt","min","max","Math","ceil","floor","guess","random","useEffect","className","map","element","icon","faTimes","faFireAlt","onClick","faWater","BoardCreate","grid","Header","GameUpdate","board2","player1deaths","filter","player2deaths","toFixed","BoatHolder","size","faSkullCrossbones","faShip","BoatUpdate","playerTurn","boat1","boat2","boat3","boat4","App","useState","setBoard2","display","setDisplay","setPlayerTurn","setVrsComputer","Player1","Player2","shipPlacer","console","log","b","result","set","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88f2cbb8.chunk.js","sourcesContent":["export function Ship(length, position, direction, name) {\n\tthis.boat = [];\n\tthis.position = position;\n\tthis.direction = direction;\n\tthis.name = name;\n\tfor (let i = 0; i < length; i++) {\n\t\tthis.boat.push([i]);\n\t}\n}\n","import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faFireAlt, faWater } from '@fortawesome/free-solid-svg-icons';\nconst GameBoard = ({ board, updateBoard, player, setBoard, VrsComputer, setComputerTurn, computerTurn }) => {\n\tconst clickHandler = (square) => {\n\t\tboard.forEach((a) => {\n\t\t\tsetComputerTurn(false);\n\t\t\tif (a.key === square) {\n\t\t\t\tif (a.containsShip) {\n\t\t\t\t\ta.hit = true;\n\t\t\t\t} else {\n\t\t\t\t\ta.missed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tupdateBoard([...board], setBoard);\n\t};\n\n\tuseEffect(() => {\n\t\tif (computerTurn === true && VrsComputer === true && player === 'Player 2') {\n\t\t\tgetRandomInt(0, 100);\n\t\t}\n\t}, [{ board }]);\n\n\tfunction getRandomInt(min, max) {\n\t\tmin = Math.ceil(min);\n\t\tmax = Math.floor(max);\n\t\tconst guess = Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n\n\t\tif (board[guess].hit === true || board[guess].missed === true) {\n\t\t\tgetRandomInt(0, 100);\n\t\t} else {\n\t\t\tclickHandler(guess);\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className={player === 'Player 1' ? 'player' : 'player2'}>{player}'s Turn</div>\n\t\t\t<div className=\"board\">\n\t\t\t\t{board.map((element) => {\n\t\t\t\t\tif (element.missed === true) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (element.hit === true) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFireAlt} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={element.missed ? 'squareMiss' : 'square'} key={element.key}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon onClick={() => clickHandler(element.key)} icon={faWater} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default GameBoard;\n","export const BoardCreate = () => {\n\tlet grid = [];\n\tfor (let i = 0; i < 100; i++) {\n\t\tconst square = {\n\t\t\tkey: i,\n\t\t\tcontainsShip: '',\n\t\t\tmissed: false,\n\t\t\thit: false,\n\t\t};\n\t\tgrid.push(square);\n\t}\n\treturn grid;\n};\n","import React from 'react';\nconst Header = () => {\n\treturn <h1 className=\"header\">BATTLESHIPS</h1>;\n};\nexport default Header;\n","import React from 'react';\n\nconst GameUpdate = ({ board, board2 }) => {\n\tconst boardStatus = board.filter((a) => a.hit === true);\n\tconst player1deaths = (boardStatus.length / 15) * 100;\n\tconst board2Status = board2.filter((a) => a.hit === true);\n\tconst player2deaths = (board2Status.length / 15) * 100;\n\t//variables fo show boat status\n\n\treturn (\n\t\t<div className=\"gameUpdate\">\n\t\t\t<div>you have killed {player2deaths.toFixed(0)}% of player 2's sailors</div>\n\t\t\t{player1deaths === 100 ? <div className=\"winner\">Player 2 wins</div> : ''}\n\t\t\t{player2deaths === 100 ? <div className=\"winner\">Player 1 wins</div> : ''}\n\t\t\t<div></div>\n\t\t\t<div> you have killed {player1deaths.toFixed(0)}% of player 1's sailors</div>\n\t\t</div>\n\t);\n};\nexport default GameUpdate;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShip, faSkullCrossbones } from '@fortawesome/free-solid-svg-icons';\n\nconst BoatHolder = ({ player, boat }) => {\n\treturn (\n\t\t<div className=\"boatHolder\">\n\t\t\t{player.boat.length === boat.length ? (\n\t\t\t\t<FontAwesomeIcon size=\"3x\" icon={faSkullCrossbones} />\n\t\t\t) : (\n\t\t\t\t<FontAwesomeIcon size=\"3x\" icon={faShip} />\n\t\t\t)}\n\t\t\t<div className=\"hitHolder\">\n\t\t\t\t<div className=\"hits\">\n\t\t\t\t\t{player.boat.map((a) => (\n\t\t\t\t\t\t<div className=\"blueBlock\" key={a}></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hits\">\n\t\t\t\t\t{boat.map((a) => (\n\t\t\t\t\t\t<div className=\"redBlock\" key={a}></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default BoatHolder;\n","import React from 'react';\nimport BoatHolder from './BoatHolder';\n\nconst BoatUpdate = ({ player, board, playerTurn }) => {\n\tconst boat1 = board.filter((a) => a.containsShip === player[0].name && a.hit === true);\n\tconst boat2 = board.filter((a) => a.containsShip === player[1].name && a.hit === true);\n\tconst boat3 = board.filter((a) => a.containsShip === player[2].name && a.hit === true);\n\tconst boat4 = board.filter((a) => a.containsShip === player[3].name && a.hit === true);\n\n\tif ((playerTurn === false && player[0].name === 5) || (playerTurn === true && player[0].name === 1)) {\n\t\treturn (\n\t\t\t<div className=\"boatupdateBorder\">\n\t\t\t\t<BoatHolder player={player[0]} boat={boat1} />\n\t\t\t\t<BoatHolder player={player[1]} boat={boat2} />\n\t\t\t\t<BoatHolder player={player[2]} boat={boat3} />\n\t\t\t\t<BoatHolder player={player[3]} boat={boat4} />\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"boatupdate\">\n\t\t\t\t<BoatHolder player={player[0]} boat={boat1} />\n\t\t\t\t<BoatHolder player={player[1]} boat={boat2} />\n\t\t\t\t<BoatHolder player={player[2]} boat={boat3} />\n\t\t\t\t<BoatHolder player={player[3]} boat={boat4} />\n\t\t\t</div>\n\t\t);\n\t}\n};\nexport default BoatUpdate;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n//import components\nimport { Ship } from './components/Ship';\nimport GameBoard from './components/GameBoard';\n\nimport { BoardCreate } from './components/BoardCreate';\nimport Header from './components/Header';\nimport GameUpdate from './components/GameUpdate';\nimport BoatUpdate from './components/BoatUpdate';\n\nfunction App() {\n\t//state values for players and board control\n\tconst [board, setBoard] = useState(BoardCreate);\n\tconst [board2, setBoard2] = useState(BoardCreate);\n\tconst [display, setDisplay] = useState(true);\n\tconst [playerTurn, setPlayerTurn] = useState(false);\n\tconst [VrsComputer, setVrsComputer] = useState(false);\n\tconst [computerTurn, setComputerTurn] = useState(false);\n\t//set boats for player 1 and add to array\n\tconst ship1 = new Ship(3, 4, false, 1);\n\tconst ship2 = new Ship(3, 45, true, 2);\n\tconst ship3 = new Ship(5, 84, false, 3);\n\tconst ship4 = new Ship(4, 24, true, 4);\n\tconst Player1 = [ship1, ship2, ship3, ship4];\n\t//set boats for player 2 and add to array\n\tconst ship5 = new Ship(3, 23, false, 5);\n\tconst ship6 = new Ship(3, 76, true, 6);\n\tconst ship7 = new Ship(5, 55, false, 7);\n\tconst ship8 = new Ship(4, 11, true, 8);\n\tconst Player2 = [ship5, ship6, ship7, ship8];\n\t//place ship function\n\tconst shipPlacer = () => {\n\t\tsetDisplay(false);\n\t\tPlayer1.forEach((a) => {\n\t\t\tif (a.direction === true) {\n\t\t\t\tfor (let i = a.position; i < a.position + a.boat.length * 10; i += 10) {\n\t\t\t\t\tboard[i].containsShip = a.name;\n\t\t\t\t\tconsole.log(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = a.position; i < a.position + a.boat.length; i++) {\n\t\t\t\t\tboard[i].containsShip = a.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetBoard([...board]);\n\t\t});\n\t\tPlayer2.forEach((b) => {\n\t\t\tif (b.direction === true) {\n\t\t\t\tfor (let i = b.position; i < b.position + b.boat.length * 10; i += 10) {\n\t\t\t\t\tboard2[i].containsShip = b.name;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = b.position; i < b.position + b.boat.length; i++) {\n\t\t\t\t\tboard2[i].containsShip = b.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetBoard2([...board2]);\n\t\t});\n\t};\n\n\t//hit and miss updater\n\tconst updateBoard = (result, set) => {\n\t\tset(result);\n\t};\n\t//click handler for computer controlled oponent\n\tconst computerHandler = () => {\n\t\tsetVrsComputer(true);\n\t\tsetComputerTurn(true);\n\t\tshipPlacer();\n\t};\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tsetPlayerTurn(!playerTurn);\n\t\t\tsetComputerTurn(true);\n\t\t}, 1500);\n\t}, [board2, board]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<div className=\"boats1\">\n\t\t\t\t<BoatUpdate board={board2} player={Player2} playerTurn={playerTurn} />\n\n\t\t\t\t<div className=\"boardContainer\">\n\t\t\t\t\t{playerTurn ? (\n\t\t\t\t\t\t<GameBoard\n\t\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\t\tplayer=\"Player 2\"\n\t\t\t\t\t\t\tupdateBoard={updateBoard}\n\t\t\t\t\t\t\tsetBoard={setBoard}\n\t\t\t\t\t\t\tVrsComputer={VrsComputer}\n\t\t\t\t\t\t\tcomputerTurn={computerTurn}\n\t\t\t\t\t\t\tsetComputerTurn={setComputerTurn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<GameBoard\n\t\t\t\t\t\t\tboard={board2}\n\t\t\t\t\t\t\tplayer=\"Player 1\"\n\t\t\t\t\t\t\tupdateBoard={updateBoard}\n\t\t\t\t\t\t\tsetBoard={setBoard2}\n\t\t\t\t\t\t\tVrsComputer={VrsComputer}\n\t\t\t\t\t\t\tcomputerTurn={computerTurn}\n\t\t\t\t\t\t\tsetComputerTurn={setComputerTurn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<BoatUpdate board={board} player={Player1} playerTurn={playerTurn} />\n\t\t\t</div>\n\t\t\t<GameUpdate board={board} board2={board2} Player1={Player1} Player2={Player2} />\n\t\t\t{display ? (\n\t\t\t\t<div className=\"buttonHolder\">\n\t\t\t\t\t<button onClick={computerHandler}>'BATTLE THE COMPUTER?'</button>\n\t\t\t\t\t<button onClick={shipPlacer}>'DESTROY A HUMAN!!'</button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}